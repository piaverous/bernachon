name: Bernachon CI/CD
on: 
  push:
    branches:
      - '**'
jobs:
  api:
    runs-on: ubuntu-latest
    outputs:
      function_uri: ${{ steps.opt.outputs.function_uri }}
    defaults:
      run:
        working-directory: ./infra/layers/prod
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_CREDENTIALS }}'

      - name: Terraform Format 👨‍🏫
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init 🤔
        id: init
        run: terraform init
      
      - name: Terraform Validate 🔍
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan 📚
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Update Pull Request with Terraform Plan
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status 🤔
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply 🚀
        if: github.ref == 'refs/heads/main' 
        run: terraform apply -auto-approve

      - name: Terraform Outputs 📦
        id: opt
        if: github.ref == 'refs/heads/main' 
        run: echo "function_uri=$(terraform output -raw function_uri)" | tr -d '\n' >> $GITHUB_OUTPUT
        
  frontend:
    runs-on: ubuntu-latest 
    needs: api
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '12.4.0'

      - name: Install and Build 🔧
        run: |
          npm ci
          echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
          echo "Injecting API_URL=${{needs.api.outputs.function_uri}} into .prod.env"
          sed -i "/API_URL=/c\API_URL=${{needs.api.outputs.function_uri}}" .prod.env
          echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
          npm run build

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@4.1.3
        if: github.ref == 'refs/heads/main' 
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: dist # The folder the action should deploy.
